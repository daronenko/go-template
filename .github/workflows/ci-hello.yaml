name: CI-Hello

on:
  push:
    branches:
      - main
      - develop
      - feature/**
    paths:
      - "service/hello/**"

jobs:
  lint:
    name: Run Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into directory
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go 1.x
        uses: actions/setup-go@v5
        with:
          go-version: 1.23
        id: go

      - name: Install required dependencies
        run: cd service/hello && go mod tidy

      - name: Run linter
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          working-directory: service/hello
          args: -c ../../.golangci.yaml

  test:
    name: Run Test
    runs-on: ubuntu-latest
    env:
      SERVICE_NAME: hello

      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_DB: hello-db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password

      TOKEN: ${{ secrets.GITHUB_TOKEN }}

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_HOST: ${{ env.POSTGRES_HOST }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out code into directory
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go 1.x
        uses: actions/setup-go@v5
        with:
          go-version: 1.23
        id: go

      - name: Install required dependency
        run: cd service/hello && go mod tidy

      - name: Install goose
        run: |
          go install github.com/pressly/goose/v3/cmd/goose@latest
          which goose

      - name: Run migrations
        run: cd service/hello && make postgres-migrate

      - name: Run test
        run: cd service/hello && make test
